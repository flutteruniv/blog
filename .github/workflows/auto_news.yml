name: Generate Weekly Flutter News with AI

on:
  schedule:
    # 毎週月曜日のUTC 0時0分（= 日本時間の月曜朝9時）に実行
    - cron: '0 0 * * 1'
  # 手動での実行も可能にする
  workflow_dispatch:

jobs:
  create-news-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # リポジトリへのコード書き込み権限
      pull-requests: write # プルリクエスト作成権限

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser "google-generativeai"

      - name: Generate article with AI script
        run: python scripts/generate_article.py
        env:
          # GitHub Secretsに設定したAPIキーをスクリプトに渡す
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Check for file changes
        id: check_files
        run: |
          # git status -s で変更（新しいファイル）があるか確認
          if [[ -z $(git status -s) ]]; then
            echo "No changes detected."
            echo "files_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected."
            echo "files_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_files.outputs.files_changed == 'true'
        run: |
          BRANCH_NAME="news/flutter-news-$(date +%Y%m%d)"
          COMMIT_MESSAGE="feat: ✨ Add weekly Flutter news for $(date +%Y-%m-%d)"
          PR_TITLE="週刊Flutterニュース: $(date +%Y-%m-%d)号"
          PR_BODY="AIによって自動生成された週刊Flutterニュースです。内容を確認・修正してマージしてください。"

          # Gitのユーザー情報を設定
          git config --global user.name "AI News Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 新しいブランチを作成して変更をコミット
          git checkout -b $BRANCH_NAME
          git add src/content/blog/flutter-news-*.md
          git commit -m "$COMMIT_MESSAGE"
          git push origin $BRANCH_NAME
          
          # プルリクエストを作成
          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base main \
            --head $BRANCH_NAME \
            --label "news,automated"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}